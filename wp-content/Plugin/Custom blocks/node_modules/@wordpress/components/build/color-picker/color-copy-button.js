"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorCopyButton = void 0;
var _compose = require("@wordpress/compose");
var _element = require("@wordpress/element");
var _icons = require("@wordpress/icons");
var _i18n = require("@wordpress/i18n");
var _styles = require("./styles");
var _tooltip = _interopRequireDefault(require("../tooltip"));
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const ColorCopyButton = props => {
  const {
    color,
    colorType
  } = props;
  const [copiedColor, setCopiedColor] = (0, _element.useState)(null);
  const copyTimerRef = (0, _element.useRef)();
  const copyRef = (0, _compose.useCopyToClipboard)(() => {
    switch (colorType) {
      case 'hsl':
        {
          return color.toHslString();
        }
      case 'rgb':
        {
          return color.toRgbString();
        }
      default:
      case 'hex':
        {
          return color.toHex();
        }
    }
  }, () => {
    if (copyTimerRef.current) {
      clearTimeout(copyTimerRef.current);
    }
    setCopiedColor(color.toHex());
    copyTimerRef.current = setTimeout(() => {
      setCopiedColor(null);
      copyTimerRef.current = undefined;
    }, 3000);
  });
  (0, _element.useEffect)(() => {
    // Clear copyTimerRef on component unmount.
    return () => {
      if (copyTimerRef.current) {
        clearTimeout(copyTimerRef.current);
      }
    };
  }, []);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_tooltip.default, {
    delay: 0,
    hideOnClick: false,
    text: copiedColor === color.toHex() ? (0, _i18n.__)('Copied!') : (0, _i18n.__)('Copy'),
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_styles.CopyButton, {
      size: "small",
      ref: copyRef,
      icon: _icons.copy,
      showTooltip: false
    })
  });
};
exports.ColorCopyButton = ColorCopyButton;
//# sourceMappingURL=color-copy-button.js.map